# this file install infra in aws (sgs, route-table, ec2, lb)
# install 1 master (control plane), 1 node (worker) using an existent infra (vcp, igw, natgtw)
# https://blog.scottlowe.org/2019/09/09/consuming-preexisting-aws-infrastructure-with-cluster-api/
# https://techbloc.net/archives/4661
{{- range .Values.clusters }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}

---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: {{ $.Chart.Name }}-{{ .name }}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: AWSCluster
    name: {{ $.Chart.Name }}-{{ .name }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSCluster
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  region: eu-west-3
  additionalTags:
    enviroment: edge
  sshKeyName: tactile5g
  controlPlaneLoadBalancer:
    scheme: internal
    subnets:
    {{- if .subnetRegion }}
      {{- range .subnetRegion }}
      - {{ . }} # private subnet region
      {{- end }}
    {{- else }}
      - "default-subnet-1"  # default subnet
      - "default-subnet-2"  # default subnet
      - "default-subnet-3"  # default subnet
    {{- end }}
  bastion:
    enabled: false
  network:
    vpc:
      id: vpc-08291124993d8220b
    subnets:
    {{- if .subnetOutpost }}
      {{- range .subnetOutpost }}
      - id: {{ . }}  # private subnet outpost
      {{- end }}
    {{- else }}
      - id: default-subnet-1  # private subnet outpost
      - id: default-subnet-2  # private subnet outpost
    {{- end }}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane 
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-control-plane
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: {{`'{{ ds.meta_data.local_hostname }}'`}}
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
        name: '{{`{{ ds.meta_data.local_hostname }}`}}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSMachineTemplate
      name: {{ $.Chart.Name }}-{{ .name }}-control-plane
  replicas: {{ .masterNodes }}
  version: {{ .version }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-control-plane
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  template:
    spec:
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      instanceType: c6id.2xlarge
      sshKeyName: tactile5g
      rootVolume:
        size: 80
      additionalSecurityGroups:
        - name: "{{ $.Chart.Name }}-{{ .name }}-sgs"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-worker
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  clusterName: {{ $.Chart.Name }}-{{ .name }}
  replicas: {{ .workerNodes }}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{ $.Chart.Name }}-{{ .name }}-worker
      clusterName: {{ $.Chart.Name }}-{{ .name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: {{ $.Chart.Name }}-{{ .name }}-worker
      version: {{ .version }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-worker
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  template:
    spec:
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
      instanceType: c6id.2xlarge
      sshKeyName: tactile5g
      rootVolume:
        size: 80
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-worker
  namespace: {{ $.Chart.Name }}-{{ .name }}
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
          name: {{`'{{ ds.meta_data.local_hostname }}'`}}
      preKubeadmCommands:
        - |
          sudo echo "
          network:
            version: 2
            renderer: networkd
            ethernets:
              ens6:
                dhcp4: true
                dhcp4-overrides:
                  use-routes: false
                routes:
                  - to: 10.11.0.0/16
                    via: 10.11.29.1
                  - to: 10.182.32.0/24
                    via: 10.11.29.1
          " | sudo tee -a /etc/netplan/ens6.yaml
      postKubeadmCommands:
        - netplan apply && ip link set ens6 up
{{- end }}