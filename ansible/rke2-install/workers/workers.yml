---
# tasks file for ansible-rk2

- name: Set system's hostname
  ansible.builtin.hostname:
    name: "{{ hostvars[item]['ansible_host'] }}"
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"   

- name: stop firewall
  ansible.builtin.systemd:
    state: stopped
    name: ufw
  ignore_errors: true
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: install nfs-common package
  ansible.builtin.apt:
    name: nfs-common
    state: latest
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: Remove dependencies that are no longer required
  ansible.builtin.apt:
    autoremove: yes
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: create rke2 directory
  ansible.builtin.file:
    path: /etc/rancher/rke2/
    state: directory
    recurse: true
    mode: '0755'
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: Get RKE2 node token
  command: sudo cat /var/lib/rancher/rke2/server/token
  register: token
  run_once: true

- name: adding content config.yaml - region nodes
  ansible.builtin.blockinfile:
    path: /etc/rancher/rke2/config.yaml
    create: true
    block: |
      disable:
        - rke2-ingress-nginx
      node-label:
        - "node=region"
        - "cluster={{ name_cluster }}"
      cloud-provider-name: external
      server: https://{{ nlb }}:9345
      token: {{ token.stdout }}
  loop: "{{ groups['region'][0:] }}"
  delegate_to: "{{ item }}"

- name: adding content config.yaml - edge nodes
  ansible.builtin.blockinfile:
    path: /etc/rancher/rke2/config.yaml
    create: true
    block: |
      disable:
        - rke2-ingress-nginx
      node-label:
        - "node=edge"
        - "cluster={{ name_cluster }}"
      cloud-provider-name: external
      server: https://{{ nlb }}:9345
      token: {{ token.stdout }}
  loop: "{{ groups['edge'][0:] }}"
  delegate_to: "{{ item }}"

- name: adding content config.yaml - edge nodes
  ansible.builtin.blockinfile:
    path: /etc/rancher/rke2/config.yaml
    create: true
    block: |
      disable:
        - rke2-ingress-nginx
      node-label:
        - "node=external-node"
        - "cluster={{ name_cluster }}"
      cloud-provider-name: external
      server: https://{{ nlb }}:9345
      token: {{ token.stdout }}
  loop: "{{ groups['external-nodes'][0:] }}"
  delegate_to: "{{ item }}"

- name: download RKE2 install script
  get_url:
    url: https://get.rke2.io
    dest: /usr/local/bin/install-rke2.sh
    mode: 0755
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"


- name: install rke2 workers
  ansible.builtin.shell: |
     INSTALL_RKE2_TYPE="agent" \
     INSTALL_RKE2_CHANNEL=v1.27 \
     /usr/local/bin/install-rke2.sh
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: enable and start rke2
  ansible.builtin.systemd:
    name: rke2-agent.service
    enabled: true
    state: started
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: Install netplan.io
  apt:
    name: netplan.io
    state: present
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: Configure ens6 interface
  template:
    src: ./01-netcfg.yaml
    dest: /etc/netplan/ens6.yaml
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"

- name: apply netplan
  command: netplan apply && ip link set ens6 up
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"
  

- name: Install apt-transport-https
  apt:
    name: apt-transport-https
    state: present
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"
  

- name: Add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  loop: "{{ groups['workers'][0:] }}"
  delegate_to: "{{ item }}"
  
- name: find kubectl file
  ansible.builtin.find:
    paths: /var/lib/rancher/rke2/data/
    patterns: kubectl
    file_type: file
    recurse: yes
  register: kubectl_path

- name: create a symbolic link for kubectl
  ansible.builtin.file:
    path: /usr/local/bin/kubectl
    src: "{{ kubectl_path.files[0].path }}"
    state: link
    force: yes
  